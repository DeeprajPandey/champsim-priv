/*
 * Implements a stream prefetcher: if a cache miss, prefetches A+1 to A+k blocks
 * into one of l stream buffers (pick lru) and prefetches the block with missed addr.
 * If A+1 is accessed at any point, A+k+1 is added to the buffer.
 *
 * 28 March, 2019
 * Deepraj Pandey
 */

#include "cache.h"

void CACHE::l1d_prefetcher_initialize() 
{

}

void CACHE::l1d_prefetcher_operate(uint64_t base_addr, uint64_t ip, uint8_t cache_hit, uint8_t type)
{
	uint64_t pf_addr;

	DP (if (warmup_complete[cpu]) {
    cout << "[" << NAME << "] " << __func__ << hex << " base_cl: " << (base_addr>>LOG2_BLOCK_SIZE);
    cout << " pf_cl: " << (pf_addr>>LOG2_BLOCK_SIZE) << " ip: " << ip << " cache_hit: " << +cache_hit << " type: " << +type << endl; });
}

void CACHE::l1d_prefetcher_cache_fill(uint64_t addr, uint32_t set, uint32_t way, uint8_t prefetch, uint64_t evicted_addr, uint32_t metadata_in)
{

}

void CACHE::l1d_prefetcher_final_stats()
{
	cout << "CPU " << cpu << " L1D stream prefetcher final stats" << endl;
}
